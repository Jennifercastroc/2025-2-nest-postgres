# =================================
# DATABASE CONFIGURATION
# =================================

# PostgreSQL connection settings
DB_HOST=localhost
DB_PORT=5432
DB_NAME=nest_db
DB_USERNAME=postgres
DB_PASSWORD=your_secure_password_here

# =================================
# JWT CONFIGURATION
# =================================

# Secret key for JWT tokens - CHANGE THIS IN PRODUCTION
# Use a long, random string (at least 32 characters)
JWT_SECRET=your_very_long_and_secure_jwt_secret_key_min_32_chars

# JWT token expiration (examples: '1h', '7d', '30d')
JWT_EXPIRES_IN=7d

# =================================
# APPLICATION CONFIGURATION
# =================================

# Port where the application will run
PORT=3000

# Node environment (development, production, test)
NODE_ENV=development

# API prefix (default: api)
API_PREFIX=api

# =================================
# CORS CONFIGURATION (Optional)
# =================================

# Allowed origins for CORS (comma-separated)
# CORS_ORIGINS=http://localhost:3000,http://localhost:4200

# =================================
# RATE LIMITING (Optional)
# =================================

# Maximum requests per time window
# RATE_LIMIT_MAX=100
# RATE_LIMIT_WINDOW=15m

# =================================
# FILE UPLOAD (Optional)
# =================================

# Maximum file size in bytes (5MB example)
# MAX_FILE_SIZE=5242880

# Allowed file types
# ALLOWED_FILE_TYPES=image/jpeg,image/png,image/gif,application/pdf

# =================================
# EMAIL CONFIGURATION (Optional)
# =================================

# SMTP configuration for sending emails
# MAIL_HOST=smtp.gmail.com
# MAIL_PORT=587
# MAIL_USER=your-email@gmail.com
# MAIL_PASSWORD=your-app-password
# MAIL_FROM=noreply@yourapp.com

# =================================
# REDIS CONFIGURATION (Optional)
# =================================

# Redis for caching
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=
# REDIS_TTL=3600

# =================================
# AWS S3 CONFIGURATION (Optional)
# =================================

# For file storage in S3
# AWS_ACCESS_KEY_ID=your_access_key
# AWS_SECRET_ACCESS_KEY=your_secret_key
# AWS_REGION=us-east-1
# AWS_S3_BUCKET=your-bucket-name

# =================================
# LOGGING (Optional)
# =================================

# Log level: error, warn, info, debug
# LOG_LEVEL=info

# =================================
# PAGINATION DEFAULTS (Optional)
# =================================

# Default values for pagination
# DEFAULT_PAGE_SIZE=10
# MAX_PAGE_SIZE=100

# =================================
# SWAGGER CONFIGURATION (Optional)
# =================================

# Enable/disable Swagger documentation
# SWAGGER_ENABLED=true

# Swagger path
# SWAGGER_PATH=api

# =================================
# SECURITY (Optional)
# =================================

# Bcrypt salt rounds for password hashing
# BCRYPT_SALT_ROUNDS=10

# Session secret
# SESSION_SECRET=your_session_secret_here

# =================================
# THIRD PARTY APIS (Optional)
# =================================

# Example: Payment gateway
# STRIPE_SECRET_KEY=sk_test_xxxxx
# STRIPE_PUBLISHABLE_KEY=pk_test_xxxxx

# Example: Social auth
# GOOGLE_CLIENT_ID=your_google_client_id
# GOOGLE_CLIENT_SECRET=your_google_client_secret

# Example: SMS service
# TWILIO_ACCOUNT_SID=your_twilio_sid
# TWILIO_AUTH_TOKEN=your_twilio_token
# TWILIO_PHONE_NUMBER=+1234567890

# =================================
# NOTES
# =================================

# 1. Copy this file to .env and fill in your actual values
# 2. Never commit .env to version control
# 3. Keep .env.example updated with new variables (but without real values)
# 4. Use strong, unique values in production
# 5. Consider using a secrets management service in production
